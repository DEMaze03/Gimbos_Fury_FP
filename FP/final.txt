Daylon Maze, CSCI 200 - E, Gimbo's Fury


Gimbo's Fury is a single player game where you control a man with a cannon protecting his hometown from evil ghosts. The main character, Gimbo, wields a cannon the player can shoot to defeat the ghosts. If the ghosts reach Gimbo's hometown (the left side of the screen) or if they possess Gimbo (collide with him), it's game over.


In order to run the program, in a PS terminal, change the directory to the location of the *.cpp, *.h, Makefile. Then, type 'mingw32-make' to make the executable. Please note, SFML is required to make this program. I really wanted to add sound effects and music to this project. In the original project proposal, I wanted this project to be a rhythm game where the player would attack enemies in time with music. However, I couldn't get the enemies to reliably line up in time with the music. I also couldn't put enough variety in the different difficulties to justify playing one over the other. 


The list data structure used in this project is a vector. I chose this because of the ease associated with pushing, popping, and erasing the list.


TEST CASES:


1. Colliding with an enemy will result in the enemy object being destroyed, score being reset to 0, and a highscore being written to Scores.txt if it is higher than the previous highscore.


2. Having an enemy collide with the left side of the screen will result in the enemy object being destroyed, score being reset to 0, and a highscore being written to Scores.txt if it is higher than the previous highscore.


3. Shooting an enemy will result in the bullet object and the enemy object being destroyed as well as the score being incremented by 1.


4. pressing space will result in the player jumping in the air


5. pressing space in the air will result in the player performing a double jump


During the course of this project, I learned even more about classes, OOP, and SFML. I now feel confident in creating classes and implementing them into my programs. A major problem I encountered during this project was learning how to use SFML to make a game. I am very used to GML, a custom language for the game development environment GameMaker Studio. So doing OOP and graphics in C++ is a lot more involved which led to a lot of confusion for me. But I eventually figured it out with the help of the internet. 



